#Использовать fs
#Использовать tempfiles
#Использовать ReadParams
#Использовать strings
#Использовать v8runner
#Использовать v8storage
#Использовать cmdline

Процедура ЗапуститьСкрип(База = "", ИмяФайлаНастроек = "")
	
	Отказ = Ложь;
	
	Парсер = Новый ПарсерАргументовКоманднойСтроки();
	Парсер.ДобавитьИменованныйПараметр("-base");
	Парсер.ДобавитьИменованныйПараметр("-setting");
	
	Параметры = Парсер.Разобрать(АргументыКоманднойСтроки);
	
	Если Параметры["-base"] <> Неопределено Тогда
		База = Параметры["-base"];	
	КонецЕсли;
		
	Если Параметры["-setting"] <> Неопределено Тогда
		ИмяФайлаНастроек = Параметры["-setting"];
	Иначе
		ИмяФайлаНастроек = "config.json";
	КонецЕсли;
	
	ИмяКонфигурационногоФайла = ОбъединитьПути(ТекущийКаталог(), ИмяФайлаНастроек);
	
	//инициализируем работу с настройками
	ошибкиЧтения = Неопределено;
	СоответствиеПараметров = ЧтениеПараметров.Прочитать(ИмяКонфигурационногоФайла, ошибкиЧтения);
	
	ПроверитьКорректностьПараметров(СоответствиеПараметров, Отказ);
	
	Если Не Отказ Тогда
		
		ИмяПапкиВыгрузки = СоответствиеПараметров.Получить("ПапкаВыгрузкиCF");
		МассивБаз = СоответствиеПараметров.Получить("Базы");
		
		//если выбрана база запускаем выгрузку только ее
		Если ЗначениеЗаполнено(База) Тогда
			
			МассивОбрабатываемыхБаз = Новый Массив();
			НастройкаБазы = ПолучитьНастройкуБазы(МассивБаз, База);
			
			Если НастройкаБазы = Неопределено Тогда
				Сообщить("В настройках не найдена база: " + База);
			Иначе
				МассивОбрабатываемыхБаз.Добавить(НастройкаБазы);
			КонецЕсли;
			
		Иначе
			МассивОбрабатываемыхБаз = МассивБаз;
		КонецЕсли;
		
		ДополнительныеПараметры = Новый Структура();
		ДополнительныеПараметры.Вставить("ИмяПапкиВыгрузки", СоответствиеПараметров.Получить("ПапкаВыгрузкиCF"));
		
		ВыполнитьСборкуПромежуточногоРелизаПоМассивуБаз(ДополнительныеПараметры, МассивОбрабатываемыхБаз);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьКорректностьПараметров(СоответствиеПараметров, Отказ)
	
	ИмяПапкиВыгрузки = СоответствиеПараметров.Получить("ПапкаВыгрузкиCF");
	МассивБаз = СоответствиеПараметров.Получить("Базы");
	
	//проверка основных настрок
	Если НЕ ЗначениеЗаполнено(ИмяПапкиВыгрузки) Тогда
		
		Отказ = Истина;
		Сообщить("Не найден параметр настройки - ПапкаВыгрузкиCF");
		
	КонецЕсли;
	
	//проверка списка баз
	Если МассивБаз = Неопределено Тогда
		МассивБаз = Новый Массив();
	КонецЕсли;
	
	Если МассивБаз.Количество() = 0 Тогда
		
		Отказ = Истина;
		Сообщить("Не задан список баз");
		
	КонецЕсли;
	
	Для Каждого НастройкаБаз Из МассивБаз Цикл
		
		ПорядковыйНомер = МассивБаз.Найти(НастройкаБаз) + 1;
		
		Если Не НастройкаБаз.Свойство("Имя")
			Или Не ЗначениеЗаполнено(НастройкаБаз.Имя) Тогда
			
			Отказ = Истина;
			Сообщить("Для базы " + ПорядковыйНомер + " не задано свойство - Имя");
			
		КонецЕсли;
		
		Если Не НастройкаБаз.Свойство("Хранилище_Адрес")
			Или Не ЗначениеЗаполнено(НастройкаБаз.Хранилище_Адрес) Тогда
			
			Отказ = Истина;
			Сообщить("Для базы " + ПорядковыйНомер + " не задано свойство - Хранилище_Адрес");
			
		КонецЕсли;
		
		Если Не НастройкаБаз.Свойство("Хранилище_Логин")
			Или Не ЗначениеЗаполнено(НастройкаБаз.Хранилище_Логин) Тогда
			
			Отказ = Истина;
			Сообщить("Для базы " + ПорядковыйНомер + " не задано свойство - Хранилище_Логин");
			
		КонецЕсли;
		
		Если Не НастройкаБаз.Свойство("Хранилище_Пароль")
			Или Не ЗначениеЗаполнено(НастройкаБаз.Хранилище_Пароль) Тогда
			
			Отказ = Истина;
			Сообщить("Для базы " + ПорядковыйНомер + " не задано свойство - Хранилище_Пароль");
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьНастройкуБазы(МассивБаз, База)
	
	НастройкаБазы = Неопределено;
	КоличествоНастроек = МассивБаз.Количество();
	Счетчик = 0;
	
	Пока Счетчик + 1 <= КоличествоНастроек
		И НастройкаБазы = Неопределено Цикл
		
		СтруктураНастроек = МассивБаз[Счетчик];
		
		Если СтруктураНастроек.Имя = База Тогда
			НастройкаБазы = СтруктураНастроек;
		КонецЕсли;
		
		Счетчик = Счетчик + 1;
		
	КонецЦикла;
	
	Возврат НастройкаБазы;
	
КонецФункции

Процедура ВыполнитьСборкуПромежуточногоРелизаПоМассивуБаз(ДополнительныеПараметры, МассивБаз)
	
	Для Каждого НастройкаБазы Из МассивБаз Цикл
		
		ВыполнитьСборкуПромежуточногоРелизаПоНастройкам(ДополнительныеПараметры, НастройкаБазы);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВыполнитьСборкуПромежуточногоРелизаПоНастройкам(ДополнительныеПараметры, НастройкаБазы)
	
	Сообщить("" + ТекущаяУниверсальнаяДата() + ". Начало выгрузки базы: " + НастройкаБазы.Имя);
	
	ИмяКаталогаВыгрузкиБазы = НастройкаБазы.Имя;
	КаталогВыгрузки = ОбъединитьПути(ТекущийКаталог(), ДополнительныеПараметры.ИмяПапкиВыгрузки, ИмяКаталогаВыгрузкиБазы);
	ИмяФайлаВыгрузки = ОбъединитьПути(КаталогВыгрузки, ПолучитьТекущуюДеньВСтроке() + ".cf");
	ВременныйКаталог = ВременныеФайлы.СоздатьКаталог();
	
	//если каталога нет то создаем его
	Если Не ФС.Существует(КаталогВыгрузки) Тогда
		СоздатьКаталог(КаталогВыгрузки);
	КонецЕсли;
	
	//выгрузим конфигурацию в файл
	УправлениеКонфигураторомХранилища = Новый УправлениеКонфигуратором();
	УправлениеКонфигураторомХранилища.КаталогСборки(ВременныйКаталог);
	УправлениеКонфигураторомХранилища.ИспользоватьВерсиюПлатформы(НастройкаБазы.ВерсияПлатформы);
	УправлениеКонфигураторомХранилища.УстановитьКодЯзыка("RU");
	
	ХранилищеКонфигурации = Новый МенеджерХранилищаКонфигурации(НастройкаБазы.Хранилище_Адрес, УправлениеКонфигураторомХранилища);
	ХранилищеКонфигурации.УстановитьПараметрыАвторизации(НастройкаБазы.Хранилище_Логин, НастройкаБазы.Хранилище_Пароль);
	
	Попытка
		ХранилищеКонфигурации.ПрочитатьХранилище();		
	Исключение
		Сообщить(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));		
	КонецПопытки;
	
	Если ХранилищеКонфигурации.ЧтениеХранилищаВыполнено() Тогда
		ХранилищеКонфигурации.ПоследняяВерсияКонфигурацииВФайл(ИмяФайлаВыгрузки);
	Иначе
		Сообщить("Не удалось прочитать хранилище: " + НастройкаБазы.Хранилище);
	КонецЕсли;
	
	Сообщить("" + ТекущаяУниверсальнаяДата() + ". Окончание выгрузки базы: " + НастройкаБазы.Имя);
	
КонецПроцедуры

Функция ПолучитьТекущуюДеньВСтроке()
	
	Результат = "";
	ВремяВыгрузки = ТекущаяУниверсальнаяДата();
	ДеньВыгрузкиВСтроке = Формат(ВремяВыгрузки, "ДЛФ=D");
	МассивЧастиДаты = СтроковыеФункции.РазложитьСтрокуВМассивПодстрок("" + ДеньВыгрузкиВСтроке, ".");
	
	Счетчик = МассивЧастиДаты.Количество() - 1;
	
	Пока Счетчик >= 0 Цикл
		
		Элемент = МассивЧастиДаты[Счетчик];
		
		Если Счетчик = 0 Тогда
			Результат = Результат + Элемент;
		Иначе
			Результат = Результат + Элемент + "_";
		КонецЕсли;
		
		Счетчик = Счетчик - 1;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

ЗапуститьСкрип();